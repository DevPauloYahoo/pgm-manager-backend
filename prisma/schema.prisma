generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Visitor {
  id         String   @id @default(uuid())
  name       String
  document   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  visits     Visit[]

  @@map("visitors")
}

model Visit {
  id         String   @id @default(uuid())
  badge      String
  secretary  String
  status     Boolean? @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  visitor_id String
  visitor    Visitor  @relation(fields: [visitor_id], references: [id], onDelete: Cascade)

  @@map("visits")
}

model User {
  id         String         @id @default(uuid())
  name       String
  email      String         @unique
  password   String
  created_at DateTime       @default(now())
  updated_at DateTime       @updatedAt
  roles      UsersToRoles[]

  @@map("users")
}

model Role {
  id         String         @id @default(uuid())
  name       String         @unique
  created_at DateTime       @default(now())
  updated_at DateTime       @updatedAt
  users      UsersToRoles[]

  @@map("roles")
}

model UsersToRoles {
  userId String
  roleId String
  role   Role   @relation(fields: [roleId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@id([userId, roleId])
  @@index([userId], map: "idx_user_id")
  @@index([roleId], map: "idx_role_id")
  @@map("users_roles")
}
